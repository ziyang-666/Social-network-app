{"version":3,"sources":["assets/images/logo.svg","components/TopBar.js","constants.js","components/Login.js","components/Register.js","components/SearchBar.js","components/PhotoGallery.js","components/PostForm.js","components/CreatePostButton.js","components/Home.js","components/Main.js","components/App.js","reportWebVitals.js","index.js"],"names":["TopBar","props","isLoggedIn","handleLogout","className","src","logo","alt","LogoutOutlined","onClick","TOKEN_KEY","BASE_URL","SEARCH_KEY","Login","handleLoggedIn","name","onFinish","values","username","password","opt","method","url","data","headers","axios","then","res","status","message","success","catch","err","console","log","error","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","htmlType","to","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Register","Form","useForm","form","response","history","push","label","hasFeedback","Password","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","Search","Input","SearchBar","useState","searchType","setSearchType","setError","enterButton","size","onSearch","handleSearch","keyword","disabled","Group","onChange","e","target","captionStyle","backgroundColor","maxHeight","overflow","position","bottom","width","color","padding","fontSize","wrapperStyle","display","minHeight","border","PhotoGallery","imagaArr","images","map","image","customOverlay","style","user","caption","enableImageSelection","backdropClosesModal","PostForm","forwardRef","formRef","ref","valuePropName","getValueFromEvent","Array","isArray","fileList","noStyle","Dragger","beforeUpload","InboxOutlined","CreatePostButton","state","visible","confirmLoading","showModal","setState","handleOk","postForm","validateFields","description","uploadPost","originFileObj","postType","match","formData","FormData","append","Authorization","localStorage","getItem","resetFields","handleCancel","onShowPost","this","title","onOk","okText","onCancel","refInstance","Component","TabPane","Tabs","Home","posts","setPost","activeTab","setActiveTab","searchOption","setSearchOption","useEffect","fetchPost","option","renderPosts","length","imageArr","filter","item","thumbnail","thumbnailWidth","thumbnailHeight","gutter","post","controls","operations","setTimeout","key","defaultActiveKey","activeKey","tabBarExtraContent","tab","Main","showLogin","path","exact","render","component","App","setIsLoggedIn","removeItem","token","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a594e085.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from \"../assets/images/logo.svg\";\nimport { LogoutOutlined } from '@ant-design/icons';\n\nfunction TopBar(props) {\n    const { isLoggedIn, handleLogout } = props;\n    return (\n        <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <span className=\"App-title\">Around Web</span>\n            {\n                isLoggedIn ?\n                    <LogoutOutlined className='logout' onClick={handleLogout}/>\n                    :\n                    null\n            }\n\n        </header>\n    );\n}\n\nexport default TopBar;\n","export const TOKEN_KEY = 'token';\nexport const BASE_URL = 'https://around-311020.wl.r.appspot.com';\n// export const BASE_URL = \"https://around-dot-around-179500.uc.r.appspot.com\";\nexport const SEARCH_KEY = {\n    all: 0,\n    keyword: 1,\n    user: 2\n};","import React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { BASE_URL } from \"../constants\";\n\nfunction Login(props) {\n    const { handleLoggedIn } = props;\n\n    const onFinish = (values) => {\n        const { username, password } = values;\n        const opt = {\n            method: \"POST\",\n            url: `${BASE_URL}/signin`,\n            data: {\n                username: username,\n                password: password\n            },\n            headers: { \"Content-Type\": \"application/json\" }\n        };\n        axios(opt)\n            .then((res) => {\n                if (res.status === 200) {\n                    const { data } = res;\n                    handleLoggedIn(data);\n                    message.success(\"Login succeed! \");\n                }\n            })\n            .catch((err) => {\n                console.log(\"login failed: \", err.message);\n                message.error(\"Login failed!\");\n            });\n    };\n\n    return (\n        <Form name=\"normal_login\" className=\"login-form\" onFinish={onFinish}>\n            <Form.Item\n                name=\"username\"\n                rules={[\n                    {\n                        required: true,\n                        message: \"Please input your Username!\"\n                    }\n                ]}\n            >\n                <Input\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                    placeholder=\"Username\"\n                />\n            </Form.Item>\n            <Form.Item\n                name=\"password\"\n                rules={[\n                    {\n                        required: true,\n                        message: \"Please input your Password!\"\n                    }\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n            </Form.Item>\n\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                    Log in\n                </Button>\n                Or <Link to=\"/register\">register now!</Link>\n            </Form.Item>\n        </Form>\n    );\n}\n\n\nexport default Login;","\n\nimport React from \"react\";\nimport { Form, Input, Button, message } from 'antd';\nimport axios from 'axios';\n\nimport { BASE_URL } from \"../constants\";\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 16,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nfunction Register(props) {\n    const [form] = Form.useForm();\n\n    const onFinish = values => {\n        console.log('Received values of form: ', values);\n        const { username, password } = values;\n        const opt = {\n            method: 'POST',\n            url: `${BASE_URL}/signup`,\n            data: {\n                username: username,\n                password: password\n            },\n            headers: { 'content-type': 'application/json'}\n        };\n\n        axios(opt)\n            .then( response => {\n                console.log(response)\n                if(response.status === 200) {\n                    message.success('Registration succeed!');\n                    props.history.push('/login');\n                }\n            })\n            .catch( error => {\n                console.log('register failed: ', error.message);\n                message.error('Registration failed!');\n            })\n    };\n\n    return (\n        <Form\n            {...formItemLayout}\n            form={form}\n            name=\"register\"\n            onFinish={onFinish}\n            className=\"register\"\n        >\n            <Form.Item\n                name=\"username\"\n                label=\"Username\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your Username!',\n                    },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                name=\"password\"\n                label=\"Password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your password!',\n                    },\n                ]}\n                hasFeedback\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item\n                name=\"confirm\"\n                label=\"Confirm Password\"\n                dependencies={['password']}\n                hasFeedback\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please confirm your password!',\n                    },\n                    ({ getFieldValue }) => ({\n                        validator(rule, value) {\n                            if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve();\n                            }\n                            return Promise.reject('The two passwords that you entered do not match!');\n                        },\n                    }),\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"register-btn\">\n                    Register\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport { Input, Radio } from \"antd\";\n\nimport { SEARCH_KEY } from \"../constants\";\n\nconst { Search } = Input;\n\nfunction SearchBar(props) {\n    const [searchType, setSearchType] = useState(SEARCH_KEY.all);\n    const [error, setError] = useState(\"\");\n\n    const changeSearchType = (e) => {\n        const searchType = e.target.value;\n        setSearchType(searchType);\n        setError(\"\");\n        if (searchType === SEARCH_KEY.all) {\n            props.handleSearch({ type: searchType, keyword: \"\" });\n        }\n    };\n\n    const handleSearch = (value) => {\n        if (searchType !== SEARCH_KEY.all && value === \"\") {\n            setError(\"Please input your search keyword!\");\n            return;\n        }\n        setError(\"\");\n        props.handleSearch({ type: searchType, keyword: value });\n    };\n\n    return (\n        <div className=\"search-bar\">\n            <Search\n                placeholder=\"input search text\"\n                enterButton=\"Search\"\n                size=\"large\"\n                onSearch={handleSearch}\n                disabled={searchType === SEARCH_KEY.all}\n            />\n            <p className=\"error-msg\">{error}</p>\n\n            <Radio.Group\n                onChange={changeSearchType}\n                value={searchType}\n                className=\"search-type-group\"\n            >\n                <Radio value={SEARCH_KEY.all}>All</Radio>\n                <Radio value={SEARCH_KEY.keyword}>Keyword</Radio>\n                <Radio value={SEARCH_KEY.user}>User</Radio>\n            </Radio.Group>\n        </div>\n    );\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Gallery from \"react-grid-gallery\";\n\nconst captionStyle = {\n    backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n    maxHeight: \"240px\",\n    overflow: \"hidden\",\n    position: \"absolute\",\n    bottom: \"0\",\n    width: \"100%\",\n    color: \"white\",\n    padding: \"2px\",\n    fontSize: \"90%\"\n};\n\nconst wrapperStyle = {\n    display: \"block\",\n    minHeight: \"1px\",\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    overflow: \"auto\"\n};\n\nfunction PhotoGallery(props) {\n    const { images } = props;\n    const imagaArr = images.map((image) => {\n        return {\n            ...image,\n            customOverlay: (\n                <div style={captionStyle}>\n                    <div>{`${image.user}: ${image.caption}`}</div>\n                </div>\n            )\n        };\n    });\n\n    return (\n        <div style={wrapperStyle}>\n            <Gallery\n                images={imagaArr}\n                enableImageSelection={false}\n                backdropClosesModal={true}\n            />\n        </div>\n    );\n}\n\nPhotoGallery.propTypes = {\n    images: PropTypes.arrayOf(\n        PropTypes.shape({\n            user: PropTypes.string.isRequired,\n            caption: PropTypes.string.isRequired,\n            src: PropTypes.string.isRequired,\n            thumbnail: PropTypes.string.isRequired,\n            thumbnailWidth: PropTypes.number.isRequired,\n            thumbnailHeight: PropTypes.number.isRequired\n        })\n    ).isRequired\n};\n\nexport default PhotoGallery;\n","import React, { forwardRef } from \"react\";\nimport { Form, Upload, Input } from \"antd\";\nimport { InboxOutlined } from \"@ant-design/icons\";\n\nexport const PostForm = forwardRef((props, formRef) => {\n    const formItemLayout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 14 }\n    };\n    const normFile = (e) => {\n        console.log(\"Upload event:\", e);\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e && e.fileList;\n    };\n    return (\n        <Form name=\"validate_other\" {...formItemLayout} ref={formRef}>\n            <Form.Item\n                name=\"description\"\n                label=\"Message\"\n                rules={[\n                    {\n                        required: true,\n                        message: \"Please input your E-mail!\"\n                    }\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Dragger\">\n                <Form.Item\n                    name=\"uploadPost\"\n                    valuePropName=\"fileList\"\n                    getValueFromEvent={normFile}\n                    noStyle\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please select an image/video!\"\n                        }\n                    ]}\n                >\n                    <Upload.Dragger name=\"files\" beforeUpload={() => false}>\n                        <p className=\"ant-upload-drag-icon\">\n                            <InboxOutlined />\n                        </p>\n                        <p className=\"ant-upload-text\">\n                            Click or drag file to this area to upload\n                        </p>\n                    </Upload.Dragger>\n                </Form.Item>\n            </Form.Item>\n        </Form>\n    );\n});\n","import React, { Component, createRef } from \"react\";\nimport { Modal, Button, message } from \"antd\";\nimport axios from \"axios\";\n\nimport { PostForm } from \"./PostForm\";\nimport { BASE_URL, TOKEN_KEY } from \"../constants\";\n\nclass CreatePostButton extends Component {\n    state = {\n        visible: false,\n        confirmLoading: false\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true\n        });\n    };\n\n    handleOk = () => {\n        this.setState({\n            confirmLoading: true\n        });\n\n        // get form data\n        this.postForm\n            .validateFields()\n            .then((form) => {\n                const { description, uploadPost } = form;\n                const { type, originFileObj } = uploadPost[0];\n                const postType = type.match(/^(image|video)/g)[0];\n                if (postType) {\n                    let formData = new FormData();\n                    formData.append(\"message\", description);\n                    formData.append(\"media_file\", originFileObj);\n                    console.log(formData);\n                    const opt = {\n                        method: \"POST\",\n                        url: `${BASE_URL}/upload`,\n                        headers: {\n                            Authorization: `Bearer ${localStorage.getItem(TOKEN_KEY)}`\n                        },\n                        data: formData\n                    };\n\n                    axios(opt)\n                        .then((res) => {\n                            if (res.status === 200) {\n                                message.success(\"The image/video is uploaded!\");\n                                this.postForm.resetFields();\n                                this.handleCancel();\n                                this.props.onShowPost(postType);\n                                this.setState({ confirmLoading: false });\n                            }\n                        })\n                        .catch((err) => {\n                            console.log(\"Upload image/video failed: \", err.message);\n                            message.error(\"Failed to upload image/video!\");\n                            this.setState({ confirmLoading: false });\n                        });\n                }\n            })\n            .catch((err) => {\n                console.log(\"err ir validate form -> \", err);\n            });\n    };\n\n    handleCancel = () => {\n        console.log(\"Clicked cancel button\");\n        this.setState({\n            visible: false\n        });\n    };\n\n    render() {\n        const { visible, confirmLoading } = this.state;\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.showModal}>\n                    Create New Post\n                </Button>\n                <Modal\n                    title=\"Create New Post\"\n                    visible={visible}\n                    onOk={this.handleOk}\n                    okText=\"Create\"\n                    confirmLoading={confirmLoading}\n                    onCancel={this.handleCancel}\n                >\n                    <PostForm ref={(refInstance) => (this.postForm = refInstance)} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default CreatePostButton;\n","import React, { useState, useEffect } from \"react\";\nimport { Tabs, message, Row, Col, Button } from \"antd\";\nimport axios from \"axios\";\n\nimport SearchBar from \"./SearchBar\";\nimport PhotoGallery from \"./PhotoGallery\";\nimport CreatePostButton from \"./CreatePostButton\";\nimport { SEARCH_KEY, BASE_URL, TOKEN_KEY } from \"../constants\";\n\nconst { TabPane } = Tabs;\n\nfunction Home(props) {\n    const [posts, setPost] = useState([]);\n    const [activeTab, setActiveTab] = useState(\"image\");\n    const [searchOption, setSearchOption] = useState({\n        type: SEARCH_KEY.all,\n        keyword: \"\"\n    });\n\n    const handleSearch = (option) => {\n        const { type, keyword } = option;\n        setSearchOption({ type: type, keyword: keyword });\n    };\n\n    useEffect(() => {\n        const { type, keyword } = searchOption;\n        fetchPost(searchOption);\n    }, [searchOption]);\n\n    const fetchPost = (option) => {\n        const { type, keyword } = option;\n        let url = \"\";\n\n        if (type === SEARCH_KEY.all) {\n            url = `${BASE_URL}/search`;\n        } else if (type === SEARCH_KEY.user) {\n            url = `${BASE_URL}/search?user=${keyword}`;\n        } else {\n            url = `${BASE_URL}/search?keywords=${keyword}`;\n        }\n\n        const opt = {\n            method: \"GET\",\n            url: url,\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(TOKEN_KEY)}`\n            }\n        };\n\n        axios(opt)\n            .then((res) => {\n                if (res.status === 200) {\n                    console.log(res.data);\n                    setPost(res.data);\n                }\n            })\n            .catch((err) => {\n                message.error(\"Fetch posts failed!\");\n                console.log(\"fetch posts failed: \", err.message);\n            });\n    };\n\n    const renderPosts = (type) => {\n        if (!posts || posts.length === 0) {\n            return <div>No data!</div>;\n        }\n        if (type === \"image\") {\n            const imageArr = posts\n                .filter((item) => item.type === \"image\")\n                .map((image) => {\n                    return {\n                        src: image.url,\n                        user: image.user,\n                        caption: image.message,\n                        thumbnail: image.url,\n                        thumbnailWidth: 300,\n                        thumbnailHeight: 200\n                    };\n                });\n\n            return <PhotoGallery images={imageArr} />;\n        } else if (type === \"video\") {\n            return (\n                <Row gutter={32}>\n                    {posts\n                        .filter((post) => post.type === \"video\")\n                        .map((post) => (\n                            <Col span={8} key={post.url}>\n                                <video src={post.url} controls={true} className=\"video-block\" />\n                                <p>\n                                    {post.user}: {post.message}\n                                </p>\n                            </Col>\n                        ))}\n                </Row>\n            );\n        }\n    };\n\n    const showPost = (type) => {\n        console.log(\"type -> \", type);\n        setActiveTab(type);\n\n        setTimeout(() => {\n            setSearchOption({ type: SEARCH_KEY.all, keyword: \"\" });\n        }, 3000);\n    };\n\n    const operations = <CreatePostButton onShowPost={showPost} />;\n    return (\n        <div className=\"home\">\n            <SearchBar handleSearch={handleSearch} />\n            <div className=\"display\">\n                <Tabs\n                    onChange={(key) => setActiveTab(key)}\n                    defaultActiveKey=\"image\"\n                    activeKey={activeTab}\n                    tabBarExtraContent={operations}\n                >\n                    <TabPane tab=\"Images\" key=\"image\">\n                        {renderPosts(\"image\")}\n                    </TabPane>\n                    <TabPane tab=\"Videos\" key=\"video\">\n                        {renderPosts(\"video\")}\n                    </TabPane>\n                </Tabs>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Home from \"./Home\";\n\nfunction Main(props) {\n    const {handleLoggedIn, isLoggedIn} = props;\n\n    const showLogin = () => {\n        // log in\n\n        // not log in\n\n        return isLoggedIn ? (\n            <Redirect to=\"/home\" />\n        ) : (\n            <Login handleLoggedIn={handleLoggedIn} />\n        );\n\n    }\n\n    const showHome = () => {\n        return isLoggedIn ? <Home /> : <Redirect to=\"/login\" />;\n    };\n    return (\n        <div className=\"main\">\n            <Switch>\n                <Route path=\"/\" exact render={showLogin} />\n                <Route path=\"/login\" render={showLogin} />\n                <Route path=\"/register\" component={Register} />\n                <Route path=\"/home\" render={showHome} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default Main;","import React, { useState } from \"react\";\nimport TopBar from \"./TopBar\";\nimport Main from \"./Main\";\nimport { TOKEN_KEY } from \"../constants\";\n\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(\n      localStorage.getItem(TOKEN_KEY) ? true : false\n  );\n\n  const logout = () => {\n    console.log(\"log out\");\n    localStorage.removeItem(TOKEN_KEY);\n    setIsLoggedIn(false);\n  };\n\n  const loggedIn = (token) => {\n    if (token) {\n      localStorage.setItem(TOKEN_KEY, token);\n      setIsLoggedIn(true);\n    }\n  };\n\n\n  return (\n    <div className=\"App\">\n      <TopBar isLoggedIn={isLoggedIn} handleLogout={logout}/>\n      <Main handleLoggedIn={loggedIn} isLoggedIn={isLoggedIn}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    // <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>,\n    // </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}